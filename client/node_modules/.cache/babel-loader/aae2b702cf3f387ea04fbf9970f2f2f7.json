{"ast":null,"code":"var _jsxFileName = \"C:\\\\VisualStudio\\\\Web\\\\jwt-auth\\\\client\\\\src\\\\index.tsx\";\nimport { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { getAccessToken } from \"./accessToken\";\nimport { App } from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:4000/graphql\"\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const accessToken = getAccessToken();\n  return {\n    headers: { ...headers,\n      authorization: accessToken ? `Bearer ${accessToken}` : \"\"\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n  credentials: \"include\"\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/VisualStudio/Web/jwt-auth/client/src/index.tsx"],"names":["ApolloClient","createHttpLink","InMemoryCache","setContext","ApolloProvider","React","ReactDOM","getAccessToken","App","httpLink","uri","authLink","_","headers","accessToken","authorization","client","link","concat","cache","credentials","render","document","getElementById"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,GAAT,QAAoB,OAApB;;AAEA,MAAMC,QAAQ,GAAGR,cAAc,CAAC;AAC9BS,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGR,UAAU,CAAC,CAACS,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C,QAAMC,WAAW,GAAGP,cAAc,EAAlC;AACA,SAAO;AACLM,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPE,MAAAA,aAAa,EAAED,WAAW,GAAI,UAASA,WAAY,EAAzB,GAA6B;AAFhD;AADJ,GAAP;AAMD,CAR0B,CAA3B;AAUA,MAAME,MAAM,GAAG,IAAIhB,YAAJ,CAAiB;AAC9BiB,EAAAA,IAAI,EAAEN,QAAQ,CAACO,MAAT,CAAgBT,QAAhB,CADwB;AAE9BU,EAAAA,KAAK,EAAE,IAAIjB,aAAJ,EAFuB;AAG9BkB,EAAAA,WAAW,EAAE;AAHiB,CAAjB,CAAf;AAMAd,QAAQ,CAACe,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEL,MAAxB;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF","sourcesContent":["import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { getAccessToken } from \"./accessToken\";\nimport { App } from \"./App\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:4000/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const accessToken = getAccessToken();\n  return {\n    headers: {\n      ...headers,\n      authorization: accessToken ? `Bearer ${accessToken}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n  credentials: \"include\",\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}